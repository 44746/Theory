{\rtf1\ansi\ansicpg1252\cocoartf1343\cocoasubrtf140
{\fonttbl\f0\froman\fcharset0 TimesNewRomanPSMT;}
{\colortbl;\red255\green255\blue255;\red26\green26\blue26;}
\paperw11952\paperh16848\margl1134\margr1134\margb1134\margt1134\vieww25400\viewh13200\viewkind0
\deftab1134
\pard\tx567\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\pardeftab1134\li567\fi-567\ri567\sb240

\f0\b\fs22 \cf0 1.
\b0 	Registers are involved in the fetch part of the fetch-execute cycle.\uc0\u8232 Name 
\b three 
\b0 of these registers, describe what each will store, and give 
\b one 
\b0 further detail about its role.\
\pard\tx1134\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\li1134\fi-567\ri567\sb240
\cf0 1	Name the register: Accumulator\
\pard\tx1701\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\pardeftab1134\li1701\fi-567\ri567\sb240
\cf0 What does it store?  where arithmetic and logic results are stored.\
Further detail: Doesn\'92t actually do the arithmetic \
\pard\tx1134\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\li1134\fi-567\ri567\sb240
\cf0 2	Name the register: Program counter\
\pard\tx1701\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\pardeftab1134\li1701\fi-567\ri567\sb240
\cf0 What does it store? where a computer is in its program sequence\
Further detail: Counts up every cycle \
\pard\tx1134\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\li1134\fi-567\ri567\sb240
\cf0 3	Name the register : Instruction register\
\pard\tx1701\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\pardeftab1134\li1701\fi-567\ri567\sb240
\cf0 What does it store? the address of the next instruction\
Further detail: Only stores the address not whats at the address\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\qr

\b\fs20 \cf0 (Total 9 marks)\
\pard\tx567\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\pardeftab1134\li567\fi-567\ri567\sb240

\b0\fs22 \cf0 \
\pard\tx567\tx1134\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\pardeftab1134\li1134\fi-1134\ri567\sb240

\b \cf0 2.
\b0 	(a)	What is a 
\i register 
\i0 in a computing context?\
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
		\
		a register is one of a small set of data holding places that are part of a computer processor . \
		A register may hold a computer instruction , a storage address, or any kind of data \cf0 \kerning1\expnd0\expndtw0 \
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\qr

\b\fs20 \cf0 (1)\
\pard\tx1134\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\li1134\fi-567\ri567\sb240

\b0\fs22 \cf0 (b)	Give 
\b one 
\b0 reason for using general purpose registers rather than main memory.\
\pard\tx1701\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\pardeftab1134\li1701\fi-567\ri567\sb240
\cf0 Quicker to access\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\qr

\b\fs20 \cf0 (1)\
\pard\tx1134\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\li1134\fi-567\ri567\sl24\slmult1

\b0\fs22 \cf0 \page \
\pard\tx1134\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\li1134\fi-567\ri567
\cf0 (c)	Some registers are used in the processor for a specific purpose.  Name 
\b three 
\b0 such registers and explain the purpose of each one.\
\pard\tx1701\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\pardeftab1134\li1701\fi-567\ri567\sb240
\cf0 1	Name : Program counter	\
	Purpose: Indicates where a computer is in its program sequence\
2	Name: Accumulator\
	Purpose: where arithmetic and logic results are stored.\
3	Name: Instruction register	\
	Purpose: stores the address of the next instruction\
\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\qr

\b\fs20 \cf0 (3)\
(Total 5 marks)\
\pard\tx567\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\pardeftab1134\li567\fi-567\ri567\sb240

\b0\fs22 \cf0 \

\b 3.
\b0 	A processor with an instruction format of 16 bits and a word length of 16 bits is being used.\
\pard\tx1134\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\li1134\fi-567\ri567\sb240
\cf0 (a)	Integers are stored in 2\'92s complement form. What is the possible range of integers that can be stored in a 16-bit word?\
\pard\tx1701\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\pardeftab1134\li1701\fi-567\ri567\sb240
\cf0 - 8192 to 8191  so a range of 16383\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\qr

\b\fs20 \cf0 (2)\
\pard\tx1134\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\li1134\fi-567\ri567\sb240

\b0\fs22 \cf0 (b)	The instruction format uses 6 bits for the operator and 10 bits for the operand.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\sb240\qc
\cf0 \
\pard\tx1134\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\li1134\fi-567\ri567\sb240
\cf0 	If direct addressing is used, what is the highest address possible?\
\pard\tx1701\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\pardeftab1134\li1701\fi-567\ri567\sb240
\cf0 9999999999\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\qr

\b\fs20 \cf0 (1)\
\pard\tx1134\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\li1134\fi-567\ri567\sl24\slmult1

\b0\fs22 \cf0 \page \
\pard\tx1134\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\li1134\fi-567\ri567
\cf0 (c)	The main registers involved in the fetch-execute cycle are the Program Counter (PC), the Current Instruction Register (CIR), Memory Address Register (MAR) and the Memory Data Register (MDR). List the 
\b steps
\b0  of the fetch-execute cycle, including how the above registers are used.\
\pard\tx1701\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\tx10800\pardeftab1134\li1701\fi-567\ri567\sb240
\cf0 The program counter stores the address of next data to fetch, This is copied across to the memory buffer register.  This then gets copied to the current instruction register. The program counter is now increased. The instruction then gets decoded, Splits in to the opcode and oprand. The oprand is copied into the memory address register. The processor then loads the value stored at the address. Its then copied into the memory buffer register, copied into the accumulator and that ends the cycle.\
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\tx10080\pardeftab1134\qr

\b\fs20 \cf0 (6)\
(Total 9 marks)\
\pard\tx567\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\tx9360\pardeftab1134\li567\fi-567\ri567\sb240

\b0\fs22 \cf0 \
\pard\pardeftab1134
\cf0 \
}